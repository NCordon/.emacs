#+TITLE: My Emacs configuration
#+AUTHOR: ncordon
#+STARTUP: indent

* Global
** Theme
Loads robbyrussel theme in eshell git mode

#+begin_src emacs-lisp
(eshell-git-prompt-use-theme 'powerline)
#+end_src

** Writing
Enables Visual Line Mode to wrap lines when reaching to the window edge

#+begin_src emacs-lisp
(global-visual-line-mode t)
#+end_src

Changes tabs for spaces

#+begin_src emacs-lisp
(setq-default indent-tabs-mode nil)
#+end_src

Enables Visual Line Mode to wrap lines when reaching to the window edge 
#+begin_src emacs-lisp
(global-visual-line-mode t)
#+end_src

* Org mode

Loads Org-mode and latex-packages

#+begin_src emacs-lisp
(require 'ox)
(require 'latex) 
(require 'ox-latex)
(require 'iso-transl)
(setq org-src-fontify-natively t)
#+end_src

Changes bullets for Org headings.

#+begin_src emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+end_src

Macro to toggle complete preview of latex of an Org file. Keybinded to C-x C-o

#+begin_src emacs-lisp
(fset 'org-latex-complete-preview
      (lambda (&optional arg) "Keyboard macro." (interactive "p")
        (kmacro-exec-ring-item
         (quote ("" 0 "%d")) arg)
        )
      )
(global-set-key (kbd "C-x C-o") 'org-latex-complete-preview)
#+end_src

** LaTeX

Keybindings to write faster LaTeX in org Mode

#+begin_src emacs-lisp
(setq LaTeX-math-list
   (quote
    ((81 "mathbb{Q}" nil)
     (90 "mathbb{Z}" nil)
     (82 "mathbb{R}" nil)
     (78 "mathbb{N}" nil)))
)
#+end_src


Takes care of code highlightings when generating pdfs

#+begin_src emacs-lisp
(setq org-latex-listings 'minted
      ;;org-latex-packages-alist '(("" "minted"))
      org-latex-pdf-process
      '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
        "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
(add-to-list 'org-latex-packages-alist '("" "minted" nil))
#+end_src

** Keybindings
Adds keybindings for ace-mc (multiple cursors)

#+begin_src emacs-lisp
(global-set-key (kbd "C-)") 'ace-mc-add-multiple-cursors)
(global-set-key (kbd "C-M-)") 'ace-mc-add-single-cursor)
#+end_src 

** Programming
Enabled languages for code snippets in org-mode

#+begin_src emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages
 '((python .t)
   (R .t)
   (ditaa .t)
   (emacs-lisp . t)
   (js .t)
   (calc .t)
   (haskell .t)))
#+end_src

** Diagrams
Changes ditaa path. Requires a previous =sudo apt-get install ditaa=

#+begin_src emacs-lisp
(setq org-ditaa-jar-path "/usr/share/ditaa/ditaa.jar")
#+end_src

* TODO Magit
#+begin_src emacs-lisp
(setq global-magit-file-mode t)
#+end_src

** Keybindings
#+begin_src emacs-lisp
(global-set-key (kbd "C-x g") 'magit-status)
(global-set-key (kbd "C-x M-g") 'magit-dispatch-popup)
#+end_src

** Ignore section
Taken from [[here]http://emacs.stackexchange.com/questions/28502/magit-show-ignored-files/28506#28506]

#+begin_src emacs-lisp
(defun magit-ignored-files ()
  (magit-git-items "ls-files" "--others" "--ignored" "--exclude-standard" "-z" "--directory"))

(defun magit-insert-ignored-files ()
  (-when-let (files (magit-ignored-files))
    (magit-insert-section (ignored)
      (magit-insert-heading "Ignored files:")
      (magit-insert-un/tracked-files-1 files nil)
      (insert ?\n))))
#+end_src

* Misc

Changes gdb command to load ARM version of debugger

#+begin_src emacs-lisp
(setq gud-gdb-command-name "/usr/bin/arm-none-eabi-gdb")
#+end_src

#+begin_src emacs-lisp
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-math-abbrev-prefix "รง")
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(custom-buffer-indent 2)
 '(custom-enabled-themes (quote (wombat)))
 '(ess-default-style (quote DEFAULT))
 '(ess-delete-dump-files t)
 '(ess-indent-with-fancy-comments nil)
 '(ess-keep-dump-files "always")
 '(ess-own-style-list
   (quote
    ((ess-indent-offset . 2)
     (ess-offset-arguments . open-delim)
     (ess-offset-arguments-newline . prev-call)
     (ess-offset-block . prev-line)
     (ess-offset-continued . straight)
     (ess-align-nested-calls "ifelse")
     (ess-align-arguments-in-calls "function[ 	]*(")
     (ess-align-continuations-in-calls . t)
     (ess-align-blocks control-flow)
     (ess-indent-from-lhs arguments fun-decl-opening)
     (ess-indent-from-chain-start . t)
     (ess-indent-with-fancy-comments . t))))
 '(fancy-splash-image "")
 '(global-linum-mode t)
 '(ido-mode (quote both) nil (ido))
 '(indent-tabs-mode nil)
 '(inferior-ess-client-command "Initial")
 '(inferior-ess-client-name "Initial")
 '(inferior-ess-ddeclient "Initial")
 '(inhibit-startup-screen t)
 '(initial-buffer-choice nil)
 '(mail-default-directory "~/")
 '(markdown-command "/usr/bin/pandoc")
 '(org-format-latex-options
   (quote
    (:foreground default :background default :scale 1.3 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers
                 ("begin" "$1" "$" "$$" "\\(" "\\["))))
 '(org-latex-create-formula-image-program (quote imagemagick))
 '(org-list-allow-alphabetical t)
 '(org-preview-latex-default-process (quote imagemagick))
 '(org-startup-with-inline-images t)
 '(package-enable-at-startup t)
 '(package-selected-packages
   (quote
    (org-beautify-theme org-plus-contrib org org-bullets flycheck-haskell ox-reveal flycheck ace-mc websocket julia-mode markdown-preview-eww yaml-mode magit deferred try ob-sagemath sage-shell-mode eshell-git-prompt ess markdown-mode)))
 '(server-mode t)
 '(standard-indent 2)
 '(tool-bar-mode nil))


(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(cursor ((t (:background "white")))))


(put 'downcase-region 'disabled nil)


(require 'ess-site)

;; Enables automatic inline-displaying of images
(add-hook 'org-babel-after-execute-hook 'org-display-inline-images)

;; Configures .s extension with asm-mode
(add-to-list 'auto-mode-alist '("\\.s\\'" . asm-mode))


;; Configures flycheck for every language
(add-hook 'after-init-hook #'global-flycheck-mode)
#+end_src



#+begin_src emacs-lisp
(magit-add-section-hook 'magit-status-sections-hook 'magit-insert-ignored-files 'magit-insert-untracked-files t)
#+end_src
